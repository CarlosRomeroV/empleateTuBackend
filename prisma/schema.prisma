// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int   @id   @default(autoincrement())
  name      String
  surname   String?
  email     String  @unique
  password  String
  role      String? // admin  vip   null
  course    String?
  active    Boolean   @default(true)
  accepNotifications Boolean @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt  
  

  Rates Rates[]

  Offer Offer[]
}

model Offer{
  id            Int     @id @default(autoincrement())
  title         String
  description   String?
  active        Boolean @default(true)
  contactEmail  String?
  location      String?
  published     DateTime @default(now())
  expired       DateTime  //iso8601

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt 
  //FK
  idCategory Int?
  category Category? @relation(fields: [idCategory], references: [id])

  idUserCreator Int
  userCreator User @relation(fields: [idUserCreator], references: [id])

  Rates Rates[]
}

model Category{
  id      Int  @id  @default(autoincrement())
  name    String @unique
  offers Offer[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt 
}

model Rates{
  value Int
  idUser Int
  idOffer Int
  user User @relation(fields: [idUser], references: [id])
  offer Offer @relation(fields: [idOffer], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt 

  @@id([idOffer, idUser])
}